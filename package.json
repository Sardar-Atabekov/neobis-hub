import React from 'react'
import {makeStyles} from '@mui/styles'
import {useDispatch, useSelector} from 'react-redux'
import ActiveSendingsItem from './sendings/ActiveSendings/ActiveSendingsItem'
import ContainerTitle from './ContainerTitle'
import TextRounded from './TextRounded'
import ContentWrapper from './ContentWrapper'
import {pauseActiveSending, setActiveSendingTimer} from '../actions/sending'
import {ReactComponent as PauseIcon} from '../../img/pause-icon.svg'
import SvgIconButton from './SvgIconButton'
import {Virtuoso} from 'react-virtuoso'

const useStyles = makeStyles((theme) => ({
  divider: {
    borderColor: theme.palette.textRounded.background
  },
  contentWrapper: {
    padding: 0,
    overflowY: 'scroll',
    position: 'relative'
  },
  headerWrapper: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingRight: 20
  }
}))

function ActiveSendings() {
  const activeSendings = useSelector(state => state.sendings.activeSendings)
  const isActiveSendingsPaused = useSelector(state => state.sendings.isActiveSendingsPaused)
  const girls = useSelector(state => state.girls.girls)
  const classes = useStyles()
  const dispatch = useDispatch()

  const getGirl = (resourceId, girlAccountId) => {
    let girl
    girls.forEach(item => item.validAccounts.forEach(girlAccount => {
      if (girlAccount.id === girlAccountId) girl = girlAccount
    }))
    return girl
  }

  const runningActiveSendings = activeSendings.filter(item => !item.isFinished).sort((a, b) => a.resourceId - b.resourceId || a.girlAccountId - b.girlAccountId || b.startTime - a.startTime)

  const handleStopSendings = () => {
    electron.sendingApi.toggleActiveSending(true)
    dispatch(pauseActiveSending(!isActiveSendingsPaused))
    dispatch(setActiveSendingTimer(new Date().getTime()))
  }

  return (
    <>
      <div className={classes.headerWrapper}>
        <ContainerTitle text='Active sendings' />
        {runningActiveSendings.length > 0 && (
          <SvgIconButton
            tooltip='Pause sendings'
            onClick={handleStopSendings}
            iconComponent={PauseIcon}
            disabled={isActiveSendingsPaused}
          />
        )}
      </div>
      <ContentWrapper divider className={classes.contentWrapper}>
        {
          runningActiveSendings.length > 0 ?
            <Virtuoso
              data={runningActiveSendings}
              itemContent={(index, activeSendingProp) => {
                const girl = getGirl(activeSendingProp.resourceId, activeSendingProp.girlAccountId)
                if (!girl) return

                return (
                  <ActiveSendingsItem
                    key={activeSendingProp.id}
                    firstName={girl.girl.firstName}
                    internalId={girl.internalId}
                    activeSendingProp={activeSendingProp}
                  />
                )
              }}
            /> :
            <TextRounded>No active sendings</TextRounded>
        }
      </ContentWrapper>
    </>
  )
}

export default ActiveSendings